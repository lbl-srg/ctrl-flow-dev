{
  "name": "linkage-api",
  "version": "0.0.1",
  "dependencies": {
    "@types/cors": "^2.8.12",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^14.2.0",
    "express": "^4.17.2",
    "helmet": "^5.0.1",
    "jsonpath": "^1.1.1",
    "marked": "^3.0.8",
    "morgan": "^1.10.0",
    "tmp": "^0.2.1",
    "underscore": "^1.13.4"
  },
  "devDependencies": {
    "@types/compression": "^1.7.2",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.4.0",
    "@types/marked": "^3.0.3",
    "@types/morgan": "^1.9.3",
    "@types/node": "^17.0.8",
    "@types/supertest": "^2.0.11",
    "@types/tmp": "^0.2.3",
    "@types/underscore": "^1.11.4",
    "debug-tree": "^0.1.3",
    "jest": "^27.4.7",
    "nodemon": "^2.0.15",
    "prettier": "^2.5.1",
    "supertest": "^6.2.2",
    "ts-jest": "^27.1.3",
    "ts-node": "^10.9.1",
    "typescript": "^4.5.4"
  },
  "scripts": {
    "docker:start": "docker-compose -p linkage-containers -f docker/docker-compose.yaml --env-file ./.env up -d && npm run docker:logs",
    "docker:debug": "docker-compose -p linkage-containers -f docker/docker-compose.yaml -f docker/docker-compose.debug.yaml --env-file ./.env up -d && npm run docker:logs",
    "docker:stop": "docker-compose -p linkage-containers -f docker/docker-compose.yaml down --remove-orphans",
    "docker:logs": "docker-compose -p linkage-containers -f docker/docker-compose.yaml logs -f",
    "docker:build": "docker-compose -f docker/docker-compose.yaml build --pull --no-cache",
    "docker:build-cached": "docker-compose -f docker/docker-compose.yaml build --pull",
    "docker:shell": "docker exec -it linkage-api /bin/bash",
    "start": "nodemon src/index.ts",
    "debug": "nodemon --inspect=0.0.0.0:9229 --exec node -r ts-node/register src/index.ts",
    "build": "tsc",
    "install-modelica-deps": "./bin/install-modelica-dependencies.sh",
    "install-python-deps": "python3 -m pip install -r scripts/sequence-doc/requirements.txt -r scripts/sequence-doc/dev-requirements.txt",
    "format": "prettier --config ../.prettierrc.json --ignore-path ../.prettierignore --write .",
    "test": "jest",
    "test:ci": "jest --testPathIgnorePatterns=\\(/node_modules/ long\\)",
    "integration-test": "jest -t --testPathPattern=integration",
    "unit-test": "jest -t --testPathPattern=unit",
    "parseTestModelica": "sh bin/parse-test-package.sh",
    "parseTestJSON": "npx ts-node scripts/parse-test-package.ts",
    "parseTemplateJSON": "npx ts-node scripts/parse-template-package.ts",
    "setupTmpDir": "mkdir -p .tmp && cp -r /dependencies/template-json .tmp",
    "generateOptionTree": "node scripts/visualize-option-tree.js"
  }
}
