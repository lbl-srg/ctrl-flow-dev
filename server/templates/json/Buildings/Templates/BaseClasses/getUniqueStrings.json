{
  "within": "Buildings.Templates.BaseClasses",
  "class_definition": [
    {
      "class_prefixes": "function",
      "class_specifier": {
        "long_class_specifier": {
          "identifier": "getUniqueStrings",
          "description_string": "Returns the unique elements in a string vector",
          "composition": {
            "element_list": [
              { "extends_clause": { "name": "Modelica.Icons.Function" } },
              {
                "component_clause": {
                  "type_prefix": "input",
                  "type_specifier": "String",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "arr",
                        "array_subscripts": [{ "colon_op": true }]
                      }
                    }
                  ]
                }
              },
              {
                "component_clause": {
                  "type_prefix": "output",
                  "type_specifier": "String",
                  "component_list": [
                    {
                      "declaration": {
                        "identifier": "uni",
                        "array_subscripts": [
                          {
                            "expression": {
                              "simple_expression": "countUniqueStrings(arr)"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "element_sections": [
              {
                "protected_element_list": [
                  {
                    "component_clause": {
                      "type_specifier": "Integer",
                      "component_list": [
                        { "declaration": { "identifier": "ite" } }
                      ]
                    }
                  }
                ]
              },
              {
                "algorithm_section": {
                  "statement": [
                    {
                      "assignment_statement": {
                        "identifier": [
                          { "dot_op": false, "identifier": "ite" }
                        ],
                        "value": { "simple_expression": "1" }
                      }
                    },
                    {
                      "assignment_statement": {
                        "identifier": [
                          { "dot_op": false, "identifier": "uni" }
                        ],
                        "value": {
                          "simple_expression": "fill(arr[1],size(uni,1))"
                        }
                      }
                    },
                    {
                      "if_statement": {
                        "if_elseif": [
                          {
                            "condition": {
                              "simple_expression": "size(arr,1) > 1"
                            },
                            "then": [
                              {
                                "for_statement": {
                                  "for_indices": [
                                    {
                                      "identifier": "i",
                                      "expression": {
                                        "simple_expression": "2:size(arr,1)"
                                      }
                                    }
                                  ],
                                  "loop_statements": [
                                    {
                                      "if_statement": {
                                        "if_elseif": [
                                          {
                                            "condition": {
                                              "simple_expression": "not Modelica.Math.BooleanVectors.anyTrue({arr[i] == uni[j] for j in 1:size(uni,1)})"
                                            },
                                            "then": [
                                              {
                                                "assignment_statement": {
                                                  "identifier": [
                                                    {
                                                      "dot_op": false,
                                                      "identifier": "ite"
                                                    }
                                                  ],
                                                  "value": {
                                                    "simple_expression": "ite +1"
                                                  }
                                                }
                                              },
                                              {
                                                "assignment_statement": {
                                                  "identifier": [
                                                    {
                                                      "dot_op": false,
                                                      "identifier": "uni",
                                                      "array_subscripts": [
                                                        {
                                                          "expression": {
                                                            "simple_expression": "ite"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  ],
                                                  "value": {
                                                    "simple_expression": "arr[i]"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ],
            "annotation": [
              {
                "element_modification_or_replaceable": {
                  "element_modification": {
                    "name": "Documentation",
                    "modification": {
                      "class_modification": [
                        {
                          "element_modification_or_replaceable": {
                            "element_modification": {
                              "name": "info",
                              "modification": {
                                "equal": true,
                                "expression": {
                                  "simple_expression": "\"<html>\n<p>\nThis function takes a one-dimension string array as an \ninput, \nand returns an array of unique elements \n(ordered as in the input array).\n</p>\n</html>\""
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "modelicaFile": "Buildings/Templates/BaseClasses/getUniqueStrings.mo",
  "fullMoFilePath": "dependencies/modelica-buildings/Buildings/Templates/BaseClasses/getUniqueStrings.mo",
  "checksum": "0c06fabb6bb9cab0355c1ef99d4607ad"
}
