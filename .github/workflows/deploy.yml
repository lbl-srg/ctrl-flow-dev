name: ctrl-flow deployment

on:
  push:
    branches: [dk/deploy-gitaction]
env:
  LBL_STAGE: staging
  DEBIAN_FRONTEND: noninteractive
  TEMPLATES_FILE_NAME: templates.json
jobs:
  build-template-json:
    runs-on: ubuntu-22.04
    env:
      MODELICA_DEPENDENCIES: dependencies
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: server/package-lock.json
      - name: Install Modelica dependencies
        run: npm run install-modelica-deps
      - name: Install Python dependencies
        run: npm run install-python-deps
      - name: Install NPM packages
        run: npm ci
      - name: create modelica-json
        run: |
          cd $GITHUB_WORKSPACE/dependencies
          echo "Working directory: $(pwd)"
          echo "JSON Output: $GITHUB_WORKSPACE/dependencies/template-json"
          # node modelica-json/app.js -f modelica-buildings/Buildings/Templates -o json -d $GITHUB_WORKSPACE/dependencies/template-json
          cd $GITHUB_WORKSPACE/server
      - name: Build templates.json
        run: npm run parseTemplateJSON
      - name: Upload templates.json as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.TEMPLATES_FILE_NAME}}
          path: scripts/${{env.TEMPLATES_FILE_NAME}}

  deploy:
    needs: build-template-json
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: cdk
    strategy:
      matrix:
        node-version: [16.x] # currently only supporting 16 and up
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: client/package-lock.json
      # - name: Configure AWS CLI
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-2
      - name: Install non-node dependencies
        run: apt-get install jq
      - name: install node packages
        run: npm i
      # - name: Synthesize cloud formation template
      #   run: npx aws-cdk synth
      # - name: Deploy stack
      #   run: npx aws-cdk deploy --require-approval never --outputs-file cdk.out/cdk-outputs.json
      # - name: Set API_ARN, configure longer timeout, and set REACT_APP_API# easily testable step
      #   run: |
      #     export API_ARN=$(jq -r .LblCdkStack${{env.LBL_STAGE}}.LbLALBArn cdk.out/cdk-outputs.json)
      #     aws elbv2 modify-load-balancer-attributes --load-balancer-arn $API_ARN --attributes Key=idle_timeout.timeout_seconds,Value=300
      #     export REACT_APP_API=$(jq -r .LblCdkStack${{env.LBL_STAGE}}.LbLApiUrl cdk.out/cdk-outputs.json)/api
      - name: Update template.json
        uses: actions/download-artifact@v2
        with:
          name: ${{env.TEMPLATES_FILE_NAME}}
          path: ../client/src/data
      # - name: Build the client
      #   run: |
      #     cd ../client
      #     npm i
      #     npm run buildForS3
      # - name: Deploy the client to S3
      #   run: |
      #     aws s3 rm s3://lbl-client-${LBL_STAGE}/ --recursive
      #     aws s3 sync ./build s3://lbl-client-${LBL_STAGE}/
